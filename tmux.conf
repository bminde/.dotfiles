# Upgrade $TERM
set -g default-terminal "screen-256color"

bind-key -n S-Up set-option -g status
bind-key -n S-Down set-option -g status
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# Appearance
set -g  status-position bottom
set -g  status-justify centre
set -g  status-left-length 50  # Default is 10
set -g  status-right-length 50  # Default is 40

## Miniminal color theme
# statusbar --------------------------------------------------------------
set -g window-status-format "#W"
set -g window-status-current-format "#W"
set -g  status-left ' ‚ùê #S  '
set -g  status-right '#{?client_prefix, tmux  ,}#{?window_zoomed_flag, Zoomed in  ,}  #H  '

# default window title colors
set -g status-bg default
set-window-option -g window-status-style fg=green
# active window title colour
set-window-option -g window-status-current-style fg=green,bold
set -g status-left-style fg=green
set -g status-right-style fg=green
## /Miniminal color theme

set -g  pane-active-border-style fg=0
set -g  pane-border-style fg=0

set -g  visual-activity on

set-option -g allow-rename off

# # Use vi keys
set -gw mode-keys vi

# # Configure your default shell
set -g default-shell $SHELL

set -g mouse on

# # # so you don't end up with window numbers like: 0 1 4 5 6
set-option -g renumber-windows on

# # # Start window numbers from 1
set -g base-index 1

# # # set escape time so vim is responsive inside tmux
set -sg escape-time 0

# # # prefix r: reload tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# # # make new panes and windows use the pwd
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Smart pane switching with awareness of vim and fzf
forward_programs="view|n?vim?|fzf"

should_forward="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?($forward_programs)(diff)?$'"

bind -n C-h  if-shell "$should_forward" "send-keys C-h"  "select-pane -L"
bind -n C-j  if-shell "$should_forward" "send-keys C-j"  "select-pane -D"
bind -n C-k  if-shell "$should_forward" "send-keys C-k"  "select-pane -U"
bind -n C-l  if-shell "$should_forward" "send-keys C-l"  "select-pane -R"
bind -n C-\\ if-shell "$should_forward" "send-keys C-\\" "select-pane -l"

# # break pane into new window
bind-key b break-pane -d

# # session navigation
# bind-key C-j choose-tree
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# # prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# # quick windows - closes when prosess ends
# dotfiles
bind-key . new-window -c ~/.dotfiles "vim +FZF"
