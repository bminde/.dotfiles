# Upgrade $TERM
# set -g  default-terminal   "tmux-256color"
# set -g default-terminal "xterm-256color-italic"
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# NOTE: treng eg desse?
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
set-window-option -g xterm-keys on

bind-key -n S-Up set-option -g status
bind-key -n S-Down set-option -g status
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# Appearance
set -g  status-position              bottom
set -g  status-justify               left
set -g  status-left-length           50  # Default is 10
set -g  status-right-length          50  # Default is 40

## Nord color theme
# set -g message-fg cyan
# set -g message-bg brightblack
# set -g message-command-fg cyan
# set -g message-command-bg brightblack
# set -g status-bg black
# set -g status-fg white
# set -g status-left-style            fg=white,bg=black
# set -g status-right-style           fg=white,bg=brightblack
# set -g status-left                  ' ❐ #S  '
# set -g status-right                 '#{?client_prefix, tmux  ,}#{?window_zoomed_flag, Zoomed in  ,}  #H  '
# set -g window-status-separator      ''
# set -g window-status-format         '#[fg=white,bg=brightblack]  #I #W  '
# set -g window-status-current-format '#[fg=black,bg=cyan,bold]  #I #W  #[default]#[fg=colour255]'
# set -g pane-active-border-style     fg=black
# set -g pane-border-style            fg=black
## /Nord

## Black/grey color theme
set -g  mode-style                   fg=colour255,bg=colour241
set -g  message-style                fg=colour255,bg=colour236
set -g  status-style                 fg=colour255,bg=colour241
set -g  status-left-style            fg=colour255,bg=colour237
set -g  status-right-style           fg=colour255,bg=colour237
set -g  status-left                  ' ❐ #S  '
set -g  status-right                 '#{?client_prefix, tmux  ,}#{?window_zoomed_flag, Zoomed in  ,}  #H  '
set -g  window-status-separator      ''
set -g  window-status-format         '#[fg=colour255]  #I #W  '
set -g  window-status-current-format '#[fg=colour255,bg=colour244,bold]  #I #W  #[default]#[fg=colour255]'
set -g  pane-active-border-style     fg=colour241
set -g  pane-border-style            fg=colour241
## /Black/grey

# set -g  pane-border-format           ' #{?pane_active,#[fg=colour166]●#[default],#{pane_index}} #{pane_current_command} '
# set -g  pane-border-status           bottom

set -g  visual-activity              on

set-option -g allow-rename off

# # Use vi keys
set -gw mode-keys vi

# # # don't require changing to normal mode to traverse command history
# # bind-key -t vi-edi, Up   history-up
# # bind-key -t vi-edit Down history-down
# # set-option -g history-limit 10000

# # Configure your default shell
set -g default-shell $SHELL

# # Override the default command, use `reattach-to-user-namespace` for everything.
# # If we're on a mac
# # Prerequesite: `brew install reattach-to-user-namespace`
if-shell 'uname | grep -q Darwin' 'set -g default-command "reattach-to-user-namespace -l ${SHELL}"' 'set -g mouse on'

# FIXME temporary mouse fix
set -g mouse on

# # # so you don't end up with window numbers like: 0 1 4 5 6
set-option -g renumber-windows on

# # # Start window numbers from 1
set -g base-index 1

# # # set escape time so vim is responsive inside tmux
set -sg escape-time 0

# # # prefix r: reload tmux config
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# # # make new panes and windows use the pwd
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# # # Smart pane switching with awareness of Vim splits and fzf.
# # # See: https://blog.bugsnag.com/tmux-and-vim/
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                 tmux select-pane -L"

bind -n C-j run "($is_vim && tmux send-keys C-j)  || \
                 ($is_fzf && tmux send-keys C-j) || \
                 tmux select-pane -D"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                 ($is_fzf && tmux send-keys C-k)  || \
                 tmux select-pane -U"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                 tmux select-pane -R"

bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# # break pane into new window
bind-key b break-pane -d

# # session navigation
# bind-key C-j choose-tree
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# # prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# bind-key C-b send-keys 'tat && exit' 'C-m'
# bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# # quick windows - closes when prosess ends
# nvAlt/tekst
bind-key n new-window -c ~/Dropbox/tekst "vim +CtrlP"
# wiki
bind-key w new-window -c ~/Dropbox/tekst/wiki "vim +CtrlP"
# dotfiles
bind-key . new-window -c ~/.dotfiles "vim +CtrlP"

# # List of plugins
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
